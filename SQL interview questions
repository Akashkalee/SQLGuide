Q1. What is SQL?
Ans: SQL stands for Structured Query Language. It is a programming language used for managing and manipulating relational databases. This includes fetching, updating, inserting and removing data from tables.

Q2. what are the main application of SQL?
Ans: Using SQL, we can:
      -create, delete, adn update tables in a database.
      -access, manipulate and modify data in a table
      -retrive and summarize the necessary information from a table or serveral tables.
      -add or remove certain rows or columns from a table.
Q3. What types of SQL commands do you know?
Ans: - Data Definition Language (DDL) - To define and modify the structure of a database.
- Data Manipulation Language (DML) - To access, mulatem and modify data in a database.
- Data Control Language (DCL) - To control user access to the data in the database and give or revoke privileges to a specific user or a group of users.
- Transaction Control Language (TCL) - To control transactions in a Database. 
- Data Query Language (DQL) - To perform queries on the data in a database to retrive the necessary information from it.

Q4. Some examples of common SQL commands of each type.
Ans: -DDL: CREATE, ALTER, TABLE, DROP, TRUNCATE, ADD COLUMN
DML: UPDATE, DELETE, INSERT
DCL: GRANT and REVOKE
TCL: COMMIT, SET TRANSACTION, ROLLBACK, and SAVEPOINT
DQL: SELECT

Q5. What is Databases?
Ans: A database is an organized collection of data stored and accessed electronically. It provides a way to store, organize, and retrieve large amounts of data efficiently.

Q6. What is DBMS?
Ans: DBMS stands for Database Management System. It is a software responsible for the creaion, retrieval, updating, and management of the database.
There are various types of DBMS, such as relational, hierarchical, network, graph, or object-oriented. These types are based on the way the data is organized, structured, and stored in the system.

Q7. What is RDBMS? 
Ans: It stands for Relational Database Management System. It's the most common type of DBMS used for working with data stored in multiple tables related to particularly designed to interact with RDBMS. Some examples of RDBMS are MySQL, PostgreSQL, Oracle, MariaDB, etc.

Q8. What are tables and Fields?
Ans: A table is an organized set of related data stored in a tabular form, i.e. rows and column. Columns can be categorized as veritcal and rows as horizontal. The columns in a table are called fields while the rows can be referred to as records.

Q9. What are Constraints in SQL?
Ans: Constraits are used to specify the rules concerning data in the table. It can be applied for single or multiple fields in an SQL table during the creation of the table or after creating using the ALTER TABLE command. The constraints are:
NOT NULL - Restricts NULL value from being inserted into a column. 
CHECK - Verifies that all values in a field satisfy a condition.
DEFAULT - Automatically assigns a default value if no value has been specified for the field.
UNIQUE - Ensures unique values to be inserted into the field.
INDEX - Indexes a field providing faster retrieval of records.
PRIMARY KEY - Uniquely identifies each record in a table.
FOREIGN KEY - Ensures referential integrity for a record in another table.

Q10. What is Primary Key?
Ans: A primary key constraint uniquely identifies each row in a table. It must contain UNIQUE values and has an implicit NOT NULL constraint. 
A table in SQL is strictly restricted to have one and only one primary key, which is comprised of single or multiple fields(columns).
                    or
A column of a table to which the PRIMARY KEY constraint was imposed to ensure unique and non-null values in that column.
In other words, a primary key is a combination of the NOT NULL and UNIQUE constraints. The primary key uniquely identifies each record of the table. 
Each table should contain a primary key and can't contain more than one primary key.

Q11. What is a unique key?
Ans. A column of a table to which the UNIQUE constraint was imposed to ensure unique values in that column, including a possible NULL value(the only one).
                    or
A UNIQUE constraint ensures that all values in a column are different. This provides uniqueness for the column(s) and help identify each row uniquely. 
Unlike primary key, there can be multiple unique constraints defined per table. The code syntax for UNIQUE is quite similar to that of PRIMARY KEY and can be used interchangeably.

Q12. What is Foreign Key?
Ans. A FOREIGN KEY comprises of single or collection of fields in a table that essentially refers to the PRIMARY KEY in another table. Foreign key constraint ensures referential integrity in the relation between two tables.
The table with the foreign key constraint is labeled as the child talbe, and the table containing the candidate key is labeled as the referenced or parent table. Foreign key constraint ensures referential integrity in the relation between two table.

Q13. Difference between a primary key and a unique key?
Ans. A primary key is used to uniquely identify a row in a table and must have unique value. On the other hand, a unique key ensures that a column or combination of columns has a unique value but does not necessarily identify the row.

Q14. What is an index?
Ans. A special data structure related to a database table and used for stroing its important parts and enabling faster data search and retrieval. Indexes are especially efficient for large databases, where they significantly enhance query performance.

Q15. What types of indexes do you know?
Ans. - Unique Index - doesn't allow duplicates in a table column and hence helps maintain data integrity.
- Clustered index - Defines the physical order of records of a database table and performs data searching based on the key values. A table can have only one clustered index.
- Non-Clustered Index - Keeps the order of the table records that doesn't match the physical order of the actual data on the disk. It means that the data is stored in one place and a non-clustered index - in another one. A table can have multiple non-clustered indexes.

Q16. What is a join?
Ans. A clause used to combine and retrieve records from two or multiple tables. SQL tables can be joined based on the relationship between the tables. Sql tables can be joined based on the relationship between the column of those tables. 

Q17. What are the types of joins?
Ans. Here are the different types of the JOINs in SQL:
- INNER JOIN : Returns records that have matching values in both tables.
- LEFT(OUTER) JOIN : Returns all records from the left table, and the matched records from the right table.
- RIGHT(OUTER) JOIN : Returns all the records from the right table, and the matched records from the left table.
- FULL(OUTER) JOIN : Returns all records when there is a match in either left or right table.

Q.18. What is a schema?
Ans. A collection of database sturctural elements such as tables, stored procedures, indexes, functions, and trigger. It shows the overall database architecture, specifies the relationships between various objects of a database, and defines different access permission for them.

Q19. What is SQL operator?
Ans. A reserved character, a combination of characters, or a keyword used in SQL queries to perform a specific operation. SQL operators are commonly used with the WHERE clause to set a condition (or conditions) for filtering the data.

Q20. What types of SQL operators do you know?
Ans. Arithmetic (+,-,*,/,%)
Comparison (=,>,<,>=,<=,<>)
Bitwise (&,|,^)
Compound (+=,-=,*=,/+,%=,&=,^-=,|*=)
Logical (AND, OR, NOT, BETWEEN, IN, LIKE, ANY, EXISTS)
String (%,_,+,^)
Set (UNION, UNION ALL, INTERSECT, MINUS)

Q21. What is an alias?
Ans. A temporary name given to a table (or a column in a table) while executing a certani SQL query. Aliases are used to improve the code readability and make the code more compact. An alias is introduced with the AS keyword.

Q22. What is clause?
Ans. A condition imposed on a SQL query to filter the data to obtain the desired result. Some example are WHERE, LIMIT, HAVING, LIKE, AND, OR, ORDER BY, etc.

Q23. What is Data Integrity?
Ans. Data Integrity is the assurance of accuracy and consistency of data over its entire life-cycle and is a critical aspect of the design, implementation, and usage of any system which stores, processes, or retrieves data. It also defines integrity constraints to enfore business rules on the data when it is entered into an application or a database.

Q24. What is a Query?
Ans. A query is a request for data or information from a database table or combination of tables. A database query can be either a select query or an action query.

Q25. What is a Subquery? What are its types?
Ans. A subquery is a query within another query, also known as a nested query or inner query. It is used to restrict or enhance the data to be queried by the main query, thus restricting or enhancing the output of the main query respectively. 

Q26. What are Entites and Relationships?
Ans.Entity: An entity can be a real-world object, either tangible or intangible, that can be easily identifiable. For example, in a college database, students, professors, workers, departments, and projects can be referred to as entities. Each entity has some associated properties that provide it an identity.

Relationships: Relataions or links between entities that have something to do with each other. For example - The employee's table in a company's database can be associated with the salary table in the same database.

Q27. List the different types of relationships in SQL?
Ans.
- One-to-one - This can be defined as the relationship between two tables where each record in one table is associated with maximum of one record in the other table.
- One-to-Many & Many-to-One - This is the most commonly used relationship where a record in a table is associated with multiple records in the other table.
- Many-to-Many - This is used in cases when multiple instances on both sides are needed for defining a relatioship.
- Self-Referencing Relationships - This is used when a table needs to define a relationship with itself.

Q28. What is a View?
Ans. A view in SQL is a virtual table based on the result-set of an SQL statement. A view contains rows and columns, just like a real table. The fields in a view are fields from one or more real tables in the database.

Q29. What is Normalization?
Ans. Normalizaiton represents the way of organizing structured data in the database efficiently. It includes the creation of tables, establishing relationships between them, and defining rules for those relationships. Inconsistency and redundancy can be kept in check based on these rules, hence, adding flexiblity to the database.

Q30. What is Denormalization?
Ans. Denormalization is the inverse process of normalization, where the normalized schema is converted into a schema that has redundant information. The performance is improved by using redundancy and keeping the redundant data consistent. The reason for performing denormalization is the overheads produced in the query processor by an over-normalized structure.

